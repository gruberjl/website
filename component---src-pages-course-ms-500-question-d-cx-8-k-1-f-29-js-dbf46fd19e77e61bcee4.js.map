{"version":3,"sources":["webpack:///./src/pages/course/ms-500/question/DCx8K1f29.js"],"names":["optionStyles","marginTop","marginBottom","display","checkboxStyles","alignItems","justifyContent","referencesStyle","bottomButtonStyle","EditQuestionPage","props","setUid","bind","handleCorrectAnswerChange","toggleShowAnswer","toggleShowQuestions","gotoQuestion","toggleEndExam","endExam","params","URLSearchParams","location","search","window","firebase","auth","onAuthStateChanged","state","questions","uid","testId","get","test","question","previousQuestionId","nextQuestionId","questionId","questionIdx","questionHtml","referencesHtml","selectedAnswer","answerShown","questionsShown","endExamShown","endExamText","user","db","firestore","this","setState","collection","doc","then","data","id","currentQuestion","previousItm","foundQuestion","forEach","idx","answered","draftToHtml","references","navigate","event","target","dataset","index","checked","push","indexOf","splice","Object","assign","map","set","isComplete","render","answers","answer","isSelected","includes","isCorrectAnswer","background","md","className","as","Link","to","onClick","variant","dangerouslySetInnerHTML","__html","answerState","style","key","Check","type","name","data-index","inline","onChange","htmlFor","value","xs","show","onHide","Header","Title","Body","striped","bordered","hover","Footer","React"],"mappings":"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","file":"component---src-pages-course-ms-500-question-d-cx-8-k-1-f-29-js-dbf46fd19e77e61bcee4.js","sourcesContent":["import * as React from \"react\"\r\nimport Page from '../../../../components/page'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Table from 'react-bootstrap/Table'\r\nimport { Link, navigate } from \"gatsby\"\r\nimport firebase from 'gatsby-plugin-firebase-app'\r\nimport draftToHtml from 'draftjs-to-html'\r\n\r\n\r\nconst optionStyles = {\r\n  marginTop: '14px',\r\n  marginBottom: '14px',\r\n  display: 'flex'\r\n}\r\n\r\nconst checkboxStyles = {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center'\r\n}\r\n\r\nconst referencesStyle = {\r\n  marginTop: '24px'\r\n}\r\n\r\nconst bottomButtonStyle = {\r\n  marginTop: '24px'\r\n}\r\n\r\nclass EditQuestionPage extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.setUid = this.setUid.bind(this)\r\n    this.handleCorrectAnswerChange = this.handleCorrectAnswerChange.bind(this)\r\n    this.toggleShowAnswer = this.toggleShowAnswer.bind(this)\r\n    this.toggleShowQuestions = this.toggleShowQuestions.bind(this)\r\n    this.gotoQuestion = this.gotoQuestion.bind(this)\r\n    this.toggleEndExam = this.toggleEndExam.bind(this)\r\n    this.endExam = this.endExam.bind(this)\r\n    const params = new URLSearchParams(props.location.search)\r\n\r\n    const isBrowser = () => typeof window !== 'undefined'\r\n\r\n    if (isBrowser()) {\r\n      firebase.auth().onAuthStateChanged(this.setUid)\r\n    }\r\n\r\n    this.state = {\r\n      questions: {},\r\n      uid: '',\r\n      testId: params.get('testId'),\r\n      test: {},\r\n      question: {\"answers\":[{\"value\":\"User1 must change their password\",\"isCorrectAnswer\":true},{\"value\":\"User2 must change their password\",\"isCorrectAnswer\":false},{\"value\":\"User3 must change their password\",\"isCorrectAnswer\":false}],\"question\":{\"blocks\":[{\"depth\":0,\"key\":\"9gu7q\",\"inlineStyleRanges\":[],\"data\":{},\"text\":\"You have a Microsoft 365 subscription that contains the users shown in the following table.\",\"entityRanges\":[],\"type\":\"unstyled\"},{\"key\":\"99lev\",\"type\":\"atomic\",\"depth\":0,\"entityRanges\":[{\"length\":1,\"offset\":0,\"key\":0}],\"data\":{},\"inlineStyleRanges\":[],\"text\":\" \"},{\"entityRanges\":[],\"key\":\"dv9re\",\"type\":\"unstyled\",\"text\":\"You create and enforce an Azure Active Directory (Azure AD) Identity Protection sign-in risk policy that has the following settings:\",\"depth\":0,\"data\":{},\"inlineStyleRanges\":[]},{\"inlineStyleRanges\":[],\"key\":\"6455m\",\"entityRanges\":[],\"type\":\"unordered-list-item\",\"data\":{},\"depth\":0,\"text\":\"Assignments: Include Group1, Exclude Group2\"},{\"depth\":0,\"text\":\"Conditions: User risk level of Medium and above\",\"type\":\"unordered-list-item\",\"entityRanges\":[],\"key\":\"2dqp1\",\"inlineStyleRanges\":[],\"data\":{}},{\"entityRanges\":[],\"type\":\"unordered-list-item\",\"text\":\"Access: Allow access, Require password change\",\"depth\":0,\"key\":\"9psfk\",\"data\":{},\"inlineStyleRanges\":[]},{\"key\":\"d3chi\",\"data\":{},\"depth\":0,\"inlineStyleRanges\":[],\"text\":\"The users attempt to sign in. The risk level for each user is shown in the following table.\",\"type\":\"unstyled\",\"entityRanges\":[]},{\"inlineStyleRanges\":[],\"key\":\"5naop\",\"type\":\"atomic\",\"data\":{},\"depth\":0,\"entityRanges\":[{\"key\":1,\"length\":1,\"offset\":0}],\"text\":\" \"},{\"data\":{},\"key\":\"38vb7\",\"type\":\"unstyled\",\"entityRanges\":[],\"inlineStyleRanges\":[],\"text\":\"For each of the following statements, check the box if the answer is true. Otherwise, leave it unchecked.\",\"depth\":0},{\"depth\":0,\"inlineStyleRanges\":[],\"text\":\"NOTE: Each correct selection is worth one point.\",\"data\":{},\"entityRanges\":[],\"key\":\"4crq3\",\"type\":\"unstyled\"}],\"entityMap\":{\"0\":{\"mutability\":\"MUTABLE\",\"type\":\"IMAGE\",\"data\":{\"height\":\"auto\",\"width\":\"auto\",\"alignment\":\"left\",\"alt\":\"Chart showing users and groups\",\"src\":\"https://i.ibb.co/WVjQP2K/chart7.png\"}},\"1\":{\"data\":{\"alignment\":\"left\",\"height\":\"auto\",\"src\":\"https://i.ibb.co/LxsWp5S/Chart8.png\",\"alt\":\"Chart showing user risk level\",\"width\":\"auto\"},\"mutability\":\"MUTABLE\",\"type\":\"IMAGE\"}}},\"references\":{\"entityMap\":{},\"blocks\":[{\"type\":\"unstyled\",\"data\":{},\"inlineStyleRanges\":[{\"length\":10,\"offset\":0,\"style\":\"BOLD\"}],\"depth\":0,\"entityRanges\":[],\"key\":\"44apb\",\"text\":\"Box 1: Yes\"},{\"key\":\"192u7\",\"data\":{},\"inlineStyleRanges\":[],\"text\":\"User1 is in Group1 which the policy applies to.\",\"entityRanges\":[],\"type\":\"unstyled\",\"depth\":0},{\"depth\":0,\"type\":\"unstyled\",\"entityRanges\":[],\"text\":\"Box 2: No\",\"data\":{},\"key\":\"8vpnm\",\"inlineStyleRanges\":[{\"offset\":0,\"style\":\"BOLD\",\"length\":9}]},{\"key\":\"48tc0\",\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{},\"depth\":0,\"type\":\"unstyled\",\"text\":\"User2 is in Group2 which is excluded from the policy.\"},{\"data\":{},\"inlineStyleRanges\":[{\"style\":\"BOLD\",\"offset\":0,\"length\":9}],\"key\":\"17c30\",\"depth\":0,\"entityRanges\":[],\"type\":\"unstyled\",\"text\":\"Box 3: No\"},{\"entityRanges\":[],\"key\":\"97snb\",\"type\":\"unstyled\",\"text\":\"User3 is in Group1 which is included in the policy and Group2 which is excluded from the policy. In this case, the exclusion wins so the policy does not apply to\",\"data\":{},\"inlineStyleRanges\":[],\"depth\":0},{\"key\":\"eeq3s\",\"inlineStyleRanges\":[],\"data\":{},\"type\":\"unstyled\",\"entityRanges\":[],\"depth\":0,\"text\":\"User3.\"}]},\"id\":\"DCx8K1f29\"},\r\n      previousQuestionId: '',\r\n      nextQuestionId: '',\r\n      questionId: 'DCx8K1f29',\r\n      questionIdx: '',\r\n      questionHtml: `<p>You have a Microsoft 365 subscription that contains the users shown in the following table.</p>\n<div style=\"text-align:left;\"><img src=\"https://i.ibb.co/WVjQP2K/chart7.png\" alt=\"Chart showing users and groups\" style=\"height: auto;width: auto\"/></div>\n<p>You create and enforce an Azure Active Directory (Azure AD) Identity Protection sign-in risk policy that has the following settings:</p>\n<ul>\n<li>Assignments: Include Group1, Exclude Group2</li>\n<li>Conditions: User risk level of Medium and above</li>\n<li>Access: Allow access, Require password change</li>\n</ul>\n<p>The users attempt to sign in. The risk level for each user is shown in the following table.</p>\n<div style=\"text-align:left;\"><img src=\"https://i.ibb.co/LxsWp5S/Chart8.png\" alt=\"Chart showing user risk level\" style=\"height: auto;width: auto\"/></div>\n<p>For each of the following statements, check the box if the answer is true. Otherwise, leave it unchecked.</p>\n<p>NOTE: Each correct selection is worth one point.</p>\n`,\r\n      referencesHtml: `<p><strong>Box 1: Yes</strong></p>\n<p>User1 is in Group1 which the policy applies to.</p>\n<p><strong>Box 2: No</strong></p>\n<p>User2 is in Group2 which is excluded from the policy.</p>\n<p><strong>Box 3: No</strong></p>\n<p>User3 is in Group1 which is included in the policy and Group2 which is excluded from the policy. In this case, the exclusion wins so the policy does not apply to</p>\n<p>User3.</p>\n`,\r\n      selectedAnswer: [],\r\n      answerShown: false,\r\n      questionsShown: false,\r\n      endExamShown: false,\r\n      endExamText: 'Are you sure you want to end the exam?'\r\n    }\r\n  }\r\n\r\n  setUid(user) {\r\n    const db = firebase.firestore()\r\n    if (user) {\r\n      this.setState({\r\n        uid: user.uid\r\n      })\r\n\r\n      db.collection(\"users\").doc(this.state.uid).collection('tests').doc(this.state.testId).get().then(doc => {\r\n        const test = doc.data()\r\n        test.id = doc.id\r\n        let previousQuestionId = ''\r\n        let nextQuestionId = ''\r\n        let currentQuestion\r\n        let previousItm\r\n        let foundQuestion = false\r\n        let questionIdx\r\n        let selectedAnswer = this.state.selectedAnswer\r\n\r\n        test.questions.forEach((question, idx) => {\r\n          if (foundQuestion) {\r\n              nextQuestionId = question.id\r\n              foundQuestion = false\r\n          }\r\n\r\n          if (this.state.questionId === question.id) {\r\n            foundQuestion = true\r\n            currentQuestion = question\r\n            questionIdx = idx+1\r\n            if (previousItm)\r\n              previousQuestionId = previousItm.id\r\n\r\n            if (currentQuestion.answered)\r\n              selectedAnswer = currentQuestion.answered\r\n          }\r\n\r\n          previousItm = question\r\n        })\r\n\r\n        db.collection('Tests').doc('MS-500').collection('Questions').doc(currentQuestion.id).get().then(doc => {\r\n          const question = doc.data()\r\n          question.id = doc.id\r\n          const questionHtml = draftToHtml(question.question)\r\n          const referencesHtml = draftToHtml(question.references)\r\n          this.setState({question, questionHtml, referencesHtml})\r\n        })\r\n\r\n        this.setState({\r\n          test,\r\n          questionIdx: questionIdx,\r\n          nextQuestionId: nextQuestionId,\r\n          previousQuestionId: previousQuestionId,\r\n          selectedAnswer\r\n        })\r\n      })\r\n    } else {\r\n      navigate(\"/login\")\r\n    }\r\n  }\r\n\r\n  handleCorrectAnswerChange(event) {\r\n    const idx = event.target.dataset.index\r\n    const target = event.target\r\n    const selectedAnswer = [...this.state.selectedAnswer]\r\n\r\n    if (target.checked) {\r\n      selectedAnswer.push(idx)\r\n    } else {\r\n      const index = selectedAnswer.indexOf(`${idx}`)\r\n      selectedAnswer.splice(index, 1)\r\n    }\r\n\r\n    this.setState({selectedAnswer})\r\n\r\n    const test = Object.assign({}, this.state.test)\r\n\r\n    test.questions = test.questions.map(question => {\r\n      if (question.id === this.state.questionId) {\r\n        question.answered = selectedAnswer\r\n      }\r\n      return question\r\n    })\r\n\r\n    const db = firebase.firestore()\r\n    db.collection(\"users\").doc(this.state.uid).collection('tests').doc(test.id).set(test)\r\n\r\n    this.setState({test})\r\n  }\r\n\r\n  toggleShowAnswer() {\r\n    const answerShown = !this.state.answerShown\r\n    this.setState({answerShown})\r\n  }\r\n\r\n  toggleShowQuestions() {\r\n    const questionsShown = !this.state.questionsShown\r\n    this.setState({questionsShown})\r\n  }\r\n\r\n  toggleEndExam() {\r\n    const endExamShown = !this.state.endExamShown\r\n    this.setState({endExamShown})\r\n  }\r\n\r\n  gotoQuestion(questionId) {\r\n    return () => {\r\n      navigate(`/course/ms-500/question/${questionId}?testId=${this.state.testId}`)\r\n    }\r\n  }\r\n\r\n  endExam() {\r\n    const test = this.state.test\r\n    test.isComplete = true\r\n    const db = firebase.firestore()\r\n    db.collection(\"users\").doc(this.state.uid).collection('tests').doc(test.id).set(test).then(() => {\r\n      navigate(`/tests/summary?testId=${this.state.testId}`)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let answers = this.state.question.answers ? this.state.question.answers : []\r\n\r\n    answers = [...answers].map((answer, index) => {\r\n      answer.isSelected = this.state.selectedAnswer.includes(`${index}`)\r\n      answer.optionStyles = Object.assign({}, optionStyles)\r\n      if (this.state.answerShown && answer.isCorrectAnswer) {\r\n        answer.optionStyles.background = 'green'\r\n      }\r\n\r\n      return answer\r\n    })\r\n\r\n    return (\r\n      <Page>\r\n        <main>\r\n          <div>\r\n            <Container>\r\n              <Row>\r\n                <Col md={8}><h1>Question {this.state.questionIdx}</h1></Col>\r\n                <Col md={2} className='align-right'> {\r\n                  this.state.previousQuestionId !== '' ?\r\n                    <Button as={Link} to={`/course/ms-500/question/${this.state.previousQuestionId}?testId=${this.state.testId}`}>Previous Question</Button> :\r\n                    ''\r\n                  }\r\n                </Col>\r\n                <Col md={2} className='align-right'>{\r\n                  this.state.nextQuestionId !== '' ?\r\n                    <Button as={Link} to={`/course/ms-500/question/${this.state.nextQuestionId}?testId=${this.state.testId}`}>Next Question</Button> :\r\n                    <Button onClick={this.toggleEndExam} variant=\"warning\">End Exam</Button>\r\n                  }\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                { this.state.questionHtml !== '' ?\r\n                  <div dangerouslySetInnerHTML={{__html: this.state.questionHtml}}></div>\r\n                  : ''\r\n                }\r\n              </Row>\r\n              <Row>\r\n                {answers.map((answerState, index) => {\r\n                  return (\r\n                    <div style={answerState.optionStyles} key={index}>\r\n                      <Form.Check type=\"checkbox\" name={\"AnswerCheck\" + index} id={\"AnswerCheck\" + index} data-index={index} inline style={checkboxStyles} checked={this.state.selectedAnswer.includes(`${index}`)} onChange={this.handleCorrectAnswerChange} />\r\n                      <label htmlFor={\"AnswerCheck\" + index}>{answerState.value}</label>\r\n                    </div>\r\n                  )\r\n                })}\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  { this.state.answerShown ?\r\n                    <div style={referencesStyle} dangerouslySetInnerHTML={{__html: this.state.referencesHtml}}></div> :\r\n                    ''\r\n                  }\r\n                </Col>\r\n              </Row>\r\n              <Row className='align-right'>\r\n                <Col md={8}></Col>\r\n                <Col md={2}> {\r\n                  this.state.previousQuestionId !== '' ?\r\n                    <Button as={Link} to={`/course/ms-500/question/${this.state.previousQuestionId}?testId=${this.state.testId}`}>Previous Question</Button> :\r\n                    ''\r\n                  }\r\n                </Col>\r\n                <Col md={2}>{\r\n                  this.state.nextQuestionId !== '' ?\r\n                    <Button as={Link} to={`/course/ms-500/question/${this.state.nextQuestionId}?testId=${this.state.testId}`}>Next Question</Button> :\r\n                    <Button onClick={this.toggleEndExam} variant=\"warning\">End Exam</Button>\r\n                  }\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={12} md={6}>\r\n                  <Button onClick={this.toggleShowAnswer} style={bottomButtonStyle}>\r\n                    { this.state.answerShown ?\r\n                      <span>Hide Answer</span> :\r\n                      <span>Show Answer</span>\r\n                    }\r\n                  </Button>\r\n                </Col>\r\n                <Col xs={12} md={6} className='align-right'>\r\n                  <Button onClick={this.toggleShowQuestions} style={bottomButtonStyle}>\r\n                    { this.state.questionsShown ?\r\n                      <span>Hide Question List</span> :\r\n                      <span>Show Question List</span>\r\n                    }\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className='align-right'>\r\n                  <Button onClick={this.toggleEndExam} variant=\"warning\" style={bottomButtonStyle}>End Exam</Button>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n\r\n          <Modal show={this.state.questionsShown} onHide={this.toggleShowQuestions}>\r\n            <Modal.Header>\r\n              <Modal.Title>Showing Test Questions</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Table striped bordered hover>\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Answer</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  { this.state.test && this.state.test.questions ? this.state.test.questions.map((question, idx) => (\r\n                    <tr key={idx} onClick={this.gotoQuestion(question.id)} className=\"cursor-pointer\">\r\n                      <td>{idx+1}</td>\r\n                      <td>{question.answered}</td>\r\n                    </tr>\r\n                  )) : '' }\r\n                </tbody>\r\n              </Table>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={this.toggleShowQuestions}>\r\n                Close\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n          <Modal show={this.state.endExamShown} onHide={this.toggleEndExam}>\r\n            <Modal.Header>\r\n              <Modal.Title>Are you sure?</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              { this.state.endExamText }\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={this.endExam}>\r\n                Yes\r\n              </Button>\r\n              <Button variant=\"secondary\" onClick={this.toggleEndExam}>\r\n                No\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </main>\r\n      </Page>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditQuestionPage\r\n"],"sourceRoot":""}