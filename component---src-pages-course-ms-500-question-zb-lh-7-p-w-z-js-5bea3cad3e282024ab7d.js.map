{"version":3,"sources":["webpack:///./src/pages/course/ms-500/question/ZbLh7P-wZ.js"],"names":["db","firebase","firestore","optionStyles","marginTop","marginBottom","display","checkboxStyles","alignItems","justifyContent","referencesStyle","bottomButtonStyle","EditQuestionPage","props","setUid","bind","handleCorrectAnswerChange","toggleShowAnswer","toggleShowQuestions","gotoQuestion","toggleEndExam","endExam","params","URLSearchParams","location","search","auth","onAuthStateChanged","state","questions","uid","testId","get","test","question","previousQuestionId","nextQuestionId","questionId","questionIdx","questionHtml","referencesHtml","selectedAnswer","answerShown","questionsShown","endExamShown","endExamText","user","this","setState","collection","doc","then","data","id","currentQuestion","previousItm","foundQuestion","forEach","idx","answered","draftToHtml","references","navigate","event","target","dataset","index","checked","push","indexOf","splice","Object","assign","map","set","isComplete","render","answers","answer","isSelected","includes","isCorrectAnswer","background","md","className","as","Link","to","onClick","variant","dangerouslySetInnerHTML","__html","answerState","style","key","Check","type","name","data-index","inline","onChange","htmlFor","value","xs","show","onHide","Header","Title","Body","striped","bordered","hover","Footer","React"],"mappings":"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","file":"component---src-pages-course-ms-500-question-zb-lh-7-p-w-z-js-5bea3cad3e282024ab7d.js","sourcesContent":["import * as React from \"react\"\r\nimport Page from '../../../../components/page'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Table from 'react-bootstrap/Table'\r\nimport { Link, navigate } from \"gatsby\"\r\nimport firebase from 'gatsby-plugin-firebase-app'\r\nimport \"firebase/firestore\"\r\nimport draftToHtml from 'draftjs-to-html'\r\nconst db = firebase.firestore()\r\n\r\nconst optionStyles = {\r\n  marginTop: '14px',\r\n  marginBottom: '14px',\r\n  display: 'flex'\r\n}\r\n\r\nconst checkboxStyles = {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center'\r\n}\r\n\r\nconst referencesStyle = {\r\n  marginTop: '24px'\r\n}\r\n\r\nconst bottomButtonStyle = {\r\n  marginTop: '24px'\r\n}\r\n\r\nclass EditQuestionPage extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.setUid = this.setUid.bind(this)\r\n    this.handleCorrectAnswerChange = this.handleCorrectAnswerChange.bind(this)\r\n    this.toggleShowAnswer = this.toggleShowAnswer.bind(this)\r\n    this.toggleShowQuestions = this.toggleShowQuestions.bind(this)\r\n    this.gotoQuestion = this.gotoQuestion.bind(this)\r\n    this.toggleEndExam = this.toggleEndExam.bind(this)\r\n    this.endExam = this.endExam.bind(this)\r\n    const params = new URLSearchParams(props.location.search)\r\n\r\n    firebase.auth().onAuthStateChanged(this.setUid)\r\n\r\n    this.state = {\r\n      questions: {},\r\n      uid: '',\r\n      testId: params.get('testId'),\r\n      test: {},\r\n      question: {\"references\":{\"entityMap\":{},\"blocks\":[{\"type\":\"unstyled\",\"data\":{},\"entityRanges\":[],\"inlineStyleRanges\":[],\"text\":\"https://www.iorad.com/player/1795886/MS-500---Limit-user-devices-to-5\",\"key\":\"2re38\",\"depth\":0},{\"type\":\"ordered-list-item\",\"inlineStyleRanges\":[{\"length\":8,\"style\":\"BOLD\",\"offset\":57}],\"entityRanges\":[],\"text\":\"After signing into the Microsoft 365 admin center, click Show All Admin centers > Azure Active Directory.\",\"depth\":0,\"key\":\"db95n\",\"data\":{}},{\"key\":\"21n2d\",\"type\":\"ordered-list-item\",\"depth\":0,\"entityRanges\":[],\"text\":\"Click Azure Active Directory > Devices > Device Settings.\",\"data\":{},\"inlineStyleRanges\":[]},{\"type\":\"ordered-list-item\",\"text\":\"Set the Users may join devices to Azure AD setting to All.\",\"key\":\"9o5f3\",\"depth\":0,\"data\":{},\"entityRanges\":[],\"inlineStyleRanges\":[]},{\"data\":{},\"type\":\"ordered-list-item\",\"inlineStyleRanges\":[{\"offset\":66,\"style\":\"BOLD\",\"length\":3}],\"key\":\"dbo7n\",\"depth\":0,\"text\":\"Set the Users may register their devices with Azure AD setting to All.\",\"entityRanges\":[]},{\"text\":\"Set the Maximum number of devices setting to 5.\",\"data\":{},\"inlineStyleRanges\":[],\"key\":\"2bh0b\",\"type\":\"ordered-list-item\",\"entityRanges\":[],\"depth\":0},{\"depth\":0,\"data\":{},\"key\":\"eu8jf\",\"type\":\"ordered-list-item\",\"entityRanges\":[],\"text\":\"Click the Save button at the top left of the screen.\",\"inlineStyleRanges\":[]},{\"key\":\"d6om3\",\"data\":{},\"entityRanges\":[],\"type\":\"unstyled\",\"text\":\"Reference:\",\"depth\":0,\"inlineStyleRanges\":[]},{\"key\":\"fpptk\",\"inlineStyleRanges\":[],\"depth\":0,\"text\":\"https://docs.microsoft.com/en-us/azure/active-directory/devices/device-management-azure-portal https://docs.microsoft.com/en-us/microsoft-365/compliance/use-your-free-azure-ad-subscription-in-office-365?view=o365-worldwide\",\"data\":{},\"type\":\"unstyled\",\"entityRanges\":[]}]},\"id\":\"ZbLh7P-wZ\",\"answers\":[{\"value\":\"From Microsoft 365 Admin Center go to Users > Select the user > Devices > Device Settings\",\"isCorrectAnswer\":false},{\"value\":\"From the Azure Active Directory Admin Center > Enterprise Admin > Devices > Device Settings\",\"isCorrectAnswer\":false},{\"isCorrectAnswer\":true,\"value\":\"From the Azure Active Directory Admin Center > Azure Active Directory > Devices > Device Settings\"},{\"isCorrectAnswer\":false,\"value\":\"From the Endpoint manager > Devices > Compliance Policies\"}],\"question\":{\"entityMap\":{},\"blocks\":[{\"depth\":0,\"inlineStyleRanges\":[{\"style\":\"color-rgb(80,80,80)\",\"offset\":0,\"length\":12},{\"style\":\"color-rgb(80,80,80)\",\"length\":99,\"offset\":13},{\"length\":72,\"offset\":113,\"style\":\"color-rgb(80,80,80)\"},{\"style\":\"bgcolor-rgb(255,255,255)\",\"length\":12,\"offset\":0},{\"length\":99,\"offset\":13,\"style\":\"bgcolor-rgb(255,255,255)\"},{\"style\":\"bgcolor-rgb(255,255,255)\",\"length\":72,\"offset\":113},{\"style\":\"fontsize-16\",\"length\":12,\"offset\":0},{\"offset\":13,\"style\":\"fontsize-16\",\"length\":99},{\"length\":72,\"offset\":113,\"style\":\"fontsize-16\"},{\"offset\":0,\"style\":\"fontfamily-Roboto Condensed\\\", sans-serif\",\"length\":12},{\"style\":\"fontfamily-Roboto Condensed\\\", sans-serif\",\"length\":99,\"offset\":13},{\"style\":\"fontfamily-Roboto Condensed\\\", sans-serif\",\"offset\":113,\"length\":72}],\"key\":\"4uj8k\",\"type\":\"unstyled\",\"entityRanges\":[],\"text\":\"SIMULATION - You need to ensure that each user can join up to five devices to Azure Active Directory (Azure AD).\\nTo complete this task, sign in to the Microsoft Office 365 admin center.\",\"data\":{}}]}},\r\n      previousQuestionId: '',\r\n      nextQuestionId: '',\r\n      questionId: 'ZbLh7P-wZ',\r\n      questionIdx: '',\r\n      questionHtml: `<p><span style=\"color: rgb(80,80,80);background-color: rgb(255,255,255);font-size: 16px;font-family: Roboto Condensed\", sans-serif;\">SIMULATION -</span> <span style=\"color: rgb(80,80,80);background-color: rgb(255,255,255);font-size: 16px;font-family: Roboto Condensed\", sans-serif;\">You need to ensure that each user can join up to five devices to Azure Active Directory (Azure AD).</span><br><span style=\"color: rgb(80,80,80);background-color: rgb(255,255,255);font-size: 16px;font-family: Roboto Condensed\", sans-serif;\">To complete this task, sign in to the Microsoft Office 365 admin center.</span></p>\n`,\r\n      referencesHtml: `<p>https://www.iorad.com/player/1795886/MS-500---Limit-user-devices-to-5</p>\n<ol>\n<li>After signing into the Microsoft 365 admin center, click <strong>Show All</strong> Admin centers &gt; Azure Active Directory.</li>\n<li>Click Azure Active Directory &gt; Devices &gt; Device Settings.</li>\n<li>Set the Users may join devices to Azure AD setting to All.</li>\n<li>Set the Users may register their devices with Azure AD setting to <strong>All</strong>.</li>\n<li>Set the Maximum number of devices setting to 5.</li>\n<li>Click the Save button at the top left of the screen.</li>\n</ol>\n<p>Reference:</p>\n<p>https://docs.microsoft.com/en-us/azure/active-directory/devices/device-management-azure-portal https://docs.microsoft.com/en-us/microsoft-365/compliance/use-your-free-azure-ad-subscription-in-office-365?view=o365-worldwide</p>\n`,\r\n      selectedAnswer: [],\r\n      answerShown: false,\r\n      questionsShown: false,\r\n      endExamShown: false,\r\n      endExamText: 'Are you sure you want to end the exam?'\r\n    }\r\n  }\r\n\r\n  setUid(user) {\r\n    if (user) {\r\n      this.setState({\r\n        uid: user.uid\r\n      })\r\n\r\n      db.collection(\"users\").doc(this.state.uid).collection('tests').doc(this.state.testId).get().then(doc => {\r\n        const test = doc.data()\r\n        test.id = doc.id\r\n        let previousQuestionId = ''\r\n        let nextQuestionId = ''\r\n        let currentQuestion\r\n        let previousItm\r\n        let foundQuestion = false\r\n        let questionIdx\r\n        let selectedAnswer = this.state.selectedAnswer\r\n\r\n        test.questions.forEach((question, idx) => {\r\n          if (foundQuestion) {\r\n              nextQuestionId = question.id\r\n              foundQuestion = false\r\n          }\r\n\r\n          if (this.state.questionId === question.id) {\r\n            foundQuestion = true\r\n            currentQuestion = question\r\n            questionIdx = idx+1\r\n            if (previousItm)\r\n              previousQuestionId = previousItm.id\r\n\r\n            if (currentQuestion.answered)\r\n              selectedAnswer = currentQuestion.answered\r\n          }\r\n\r\n          previousItm = question\r\n        })\r\n\r\n        db.collection('Tests').doc('MS-500').collection('Questions').doc(currentQuestion.id).get().then(doc => {\r\n          const question = doc.data()\r\n          question.id = doc.id\r\n          const questionHtml = draftToHtml(question.question)\r\n          const referencesHtml = draftToHtml(question.references)\r\n          this.setState({question, questionHtml, referencesHtml})\r\n        })\r\n\r\n        this.setState({\r\n          test,\r\n          questionIdx: questionIdx,\r\n          nextQuestionId: nextQuestionId,\r\n          previousQuestionId: previousQuestionId,\r\n          selectedAnswer\r\n        })\r\n      })\r\n    } else {\r\n      navigate(\"/login\")\r\n    }\r\n  }\r\n\r\n  handleCorrectAnswerChange(event) {\r\n    const idx = event.target.dataset.index\r\n    const target = event.target\r\n    const selectedAnswer = [...this.state.selectedAnswer]\r\n\r\n    if (target.checked) {\r\n      selectedAnswer.push(idx)\r\n    } else {\r\n      const index = selectedAnswer.indexOf(`${idx}`)\r\n      selectedAnswer.splice(index, 1)\r\n    }\r\n\r\n    this.setState({selectedAnswer})\r\n\r\n    const test = Object.assign({}, this.state.test)\r\n\r\n    test.questions = test.questions.map(question => {\r\n      if (question.id === this.state.questionId) {\r\n        question.answered = selectedAnswer\r\n      }\r\n      return question\r\n    })\r\n\r\n    db.collection(\"users\").doc(this.state.uid).collection('tests').doc(test.id).set(test)\r\n\r\n    this.setState({test})\r\n  }\r\n\r\n  toggleShowAnswer() {\r\n    const answerShown = !this.state.answerShown\r\n    this.setState({answerShown})\r\n  }\r\n\r\n  toggleShowQuestions() {\r\n    const questionsShown = !this.state.questionsShown\r\n    this.setState({questionsShown})\r\n  }\r\n\r\n  toggleEndExam() {\r\n    const endExamShown = !this.state.endExamShown\r\n    this.setState({endExamShown})\r\n  }\r\n\r\n  gotoQuestion(questionId) {\r\n    return () => {\r\n      navigate(`/course/ms-500/question/${questionId}?testId=${this.state.testId}`)\r\n    }\r\n  }\r\n\r\n  endExam() {\r\n    const test = this.state.test\r\n    test.isComplete = true\r\n    db.collection(\"users\").doc(this.state.uid).collection('tests').doc(test.id).set(test).then(() => {\r\n      navigate(`/tests/summary?testId=${this.state.testId}`)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let answers = this.state.question.answers ? this.state.question.answers : []\r\n\r\n    answers = [...answers].map((answer, index) => {\r\n      answer.isSelected = this.state.selectedAnswer.includes(`${index}`)\r\n      answer.optionStyles = Object.assign({}, optionStyles)\r\n      if (this.state.answerShown && answer.isCorrectAnswer) {\r\n        answer.optionStyles.background = 'green'\r\n      }\r\n\r\n      return answer\r\n    })\r\n\r\n    return (\r\n      <Page>\r\n        <main>\r\n          <div>\r\n            <Container>\r\n              <Row>\r\n                <Col md={8}><h1>Question {this.state.questionIdx}</h1></Col>\r\n                <Col md={2} className='align-right'> {\r\n                  this.state.previousQuestionId !== '' ?\r\n                    <Button as={Link} to={`/course/ms-500/question/${this.state.previousQuestionId}?testId=${this.state.testId}`}>Previous Question</Button> :\r\n                    ''\r\n                  }\r\n                </Col>\r\n                <Col md={2} className='align-right'>{\r\n                  this.state.nextQuestionId !== '' ?\r\n                    <Button as={Link} to={`/course/ms-500/question/${this.state.nextQuestionId}?testId=${this.state.testId}`}>Next Question</Button> :\r\n                    <Button onClick={this.toggleEndExam} variant=\"warning\">End Exam</Button>\r\n                  }\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                { this.state.questionHtml !== '' ?\r\n                  <div dangerouslySetInnerHTML={{__html: this.state.questionHtml}}></div>\r\n                  : ''\r\n                }\r\n              </Row>\r\n              <Row>\r\n                {answers.map((answerState, index) => {\r\n                  return (\r\n                    <div style={answerState.optionStyles} key={index}>\r\n                      <Form.Check type=\"checkbox\" name={\"AnswerCheck\" + index} id={\"AnswerCheck\" + index} data-index={index} inline style={checkboxStyles} checked={this.state.selectedAnswer.includes(`${index}`)} onChange={this.handleCorrectAnswerChange} />\r\n                      <label htmlFor={\"AnswerCheck\" + index}>{answerState.value}</label>\r\n                    </div>\r\n                  )\r\n                })}\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  { this.state.answerShown ?\r\n                    <div style={referencesStyle} dangerouslySetInnerHTML={{__html: this.state.referencesHtml}}></div> :\r\n                    ''\r\n                  }\r\n                </Col>\r\n              </Row>\r\n              <Row className='align-right'>\r\n                <Col md={8}></Col>\r\n                <Col md={2}> {\r\n                  this.state.previousQuestionId !== '' ?\r\n                    <Button as={Link} to={`/course/ms-500/question/${this.state.previousQuestionId}?testId=${this.state.testId}`}>Previous Question</Button> :\r\n                    ''\r\n                  }\r\n                </Col>\r\n                <Col md={2}>{\r\n                  this.state.nextQuestionId !== '' ?\r\n                    <Button as={Link} to={`/course/ms-500/question/${this.state.nextQuestionId}?testId=${this.state.testId}`}>Next Question</Button> :\r\n                    <Button onClick={this.toggleEndExam} variant=\"warning\">End Exam</Button>\r\n                  }\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={12} md={6}>\r\n                  <Button onClick={this.toggleShowAnswer} style={bottomButtonStyle}>\r\n                    { this.state.answerShown ?\r\n                      <span>Hide Answer</span> :\r\n                      <span>Show Answer</span>\r\n                    }\r\n                  </Button>\r\n                </Col>\r\n                <Col xs={12} md={6} className='align-right'>\r\n                  <Button onClick={this.toggleShowQuestions} style={bottomButtonStyle}>\r\n                    { this.state.questionsShown ?\r\n                      <span>Hide Question List</span> :\r\n                      <span>Show Question List</span>\r\n                    }\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className='align-right'>\r\n                  <Button onClick={this.toggleEndExam} variant=\"warning\" style={bottomButtonStyle}>End Exam</Button>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n\r\n          <Modal show={this.state.questionsShown} onHide={this.toggleShowQuestions}>\r\n            <Modal.Header>\r\n              <Modal.Title>Showing Test Questions</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Table striped bordered hover>\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Answer</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  { this.state.test && this.state.test.questions ? this.state.test.questions.map((question, idx) => (\r\n                    <tr key={idx} onClick={this.gotoQuestion(question.id)} className=\"cursor-pointer\">\r\n                      <td>{idx+1}</td>\r\n                      <td>{question.answered}</td>\r\n                    </tr>\r\n                  )) : '' }\r\n                </tbody>\r\n              </Table>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={this.toggleShowQuestions}>\r\n                Close\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n          <Modal show={this.state.endExamShown} onHide={this.toggleEndExam}>\r\n            <Modal.Header>\r\n              <Modal.Title>Are you sure?</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              { this.state.endExamText }\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={this.endExam}>\r\n                Yes\r\n              </Button>\r\n              <Button variant=\"secondary\" onClick={this.toggleEndExam}>\r\n                No\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </main>\r\n      </Page>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditQuestionPage\r\n"],"sourceRoot":""}