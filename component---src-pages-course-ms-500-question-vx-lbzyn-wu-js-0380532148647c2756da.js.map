{"version":3,"sources":["webpack:///./src/pages/course/ms-500/question/vxLbzynWU.js"],"names":["db","firebase","firestore","optionStyles","marginTop","marginBottom","display","checkboxStyles","alignItems","justifyContent","referencesStyle","bottomButtonStyle","EditQuestionPage","props","setUid","bind","handleCorrectAnswerChange","toggleShowAnswer","toggleShowQuestions","gotoQuestion","toggleEndExam","endExam","params","URLSearchParams","location","search","auth","onAuthStateChanged","state","questions","uid","testId","get","test","question","previousQuestionId","nextQuestionId","questionId","questionIdx","questionHtml","referencesHtml","selectedAnswer","answerShown","questionsShown","endExamShown","endExamText","user","this","setState","collection","doc","then","data","id","currentQuestion","previousItm","foundQuestion","forEach","idx","answered","draftToHtml","references","console","log","event","target","dataset","index","checked","push","indexOf","splice","Object","assign","map","set","navigate","isComplete","render","answers","answer","isSelected","includes","isCorrectAnswer","background","md","className","as","Link","to","onClick","variant","dangerouslySetInnerHTML","__html","answerState","style","key","Check","type","name","data-index","inline","onChange","htmlFor","value","xs","show","onHide","Header","Title","Body","striped","bordered","hover","Footer","React"],"mappings":"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","file":"component---src-pages-course-ms-500-question-vx-lbzyn-wu-js-0380532148647c2756da.js","sourcesContent":["import * as React from \"react\"\r\nimport Page from '../../../../components/page'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Table from 'react-bootstrap/Table'\r\nimport { Link, navigate } from \"gatsby\"\r\nimport firebase from \"firebase/app\"\r\nimport \"firebase/firestore\"\r\nimport draftToHtml from 'draftjs-to-html'\r\nconst db = firebase.firestore()\r\n\r\nconst optionStyles = {\r\n  marginTop: '14px',\r\n  marginBottom: '14px',\r\n  display: 'flex'\r\n}\r\n\r\nconst checkboxStyles = {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center'\r\n}\r\n\r\nconst referencesStyle = {\r\n  marginTop: '24px'\r\n}\r\n\r\nconst bottomButtonStyle = {\r\n  marginTop: '24px'\r\n}\r\n\r\nclass EditQuestionPage extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.setUid = this.setUid.bind(this)\r\n    this.handleCorrectAnswerChange = this.handleCorrectAnswerChange.bind(this)\r\n    this.toggleShowAnswer = this.toggleShowAnswer.bind(this)\r\n    this.toggleShowQuestions = this.toggleShowQuestions.bind(this)\r\n    this.gotoQuestion = this.gotoQuestion.bind(this)\r\n    this.toggleEndExam = this.toggleEndExam.bind(this)\r\n    this.endExam = this.endExam.bind(this)\r\n    const params = new URLSearchParams(props.location.search)\r\n\r\n    firebase.auth().onAuthStateChanged(this.setUid)\r\n\r\n    this.state = {\r\n      questions: {},\r\n      uid: '',\r\n      testId: params.get('testId'),\r\n      test: {},\r\n      question: {\"id\":\"vxLbzynWU\",\"references\":{\"entityMap\":{},\"blocks\":[{\"data\":{},\"entityRanges\":[],\"key\":\"b4n82\",\"depth\":0,\"type\":\"unstyled\",\"inlineStyleRanges\":[{\"style\":\"BOLD\",\"length\":9,\"offset\":0}],\"text\":\"Box 1: No\"},{\"type\":\"unstyled\",\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"a4q6n\",\"data\":{},\"text\":\"User1 will receive the two alerts classified as medium or higher.\",\"depth\":0},{\"entityRanges\":[],\"data\":{},\"key\":\"fnuqh\",\"type\":\"unstyled\",\"inlineStyleRanges\":[],\"text\":\"Sign-ins from infected device is classified as low. This risk detection identifies IP addresses, not user devices. If several devices are behind a single IP address, and only some are controlled by a bot network, sign-ins from other devices my trigger this event unnecessarily, which is why this risk detection is classified as\",\"depth\":0},{\"text\":\"Low.\",\"type\":\"unstyled\",\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{},\"depth\":0,\"key\":\"9rl6v\"},{\"data\":{},\"entityRanges\":[],\"type\":\"unstyled\",\"key\":\"fc3ej\",\"depth\":0,\"inlineStyleRanges\":[{\"length\":9,\"style\":\"BOLD\",\"offset\":0}],\"text\":\"Box 2: No\"},{\"type\":\"unstyled\",\"data\":{},\"key\":\"3shng\",\"entityRanges\":[],\"text\":\"User2 will receive the two alerts classified as medium or higher.\",\"inlineStyleRanges\":[],\"depth\":0},{\"key\":\"81rao\",\"type\":\"unstyled\",\"data\":{},\"entityRanges\":[],\"inlineStyleRanges\":[],\"text\":\"Email alerts are sent to all global admins, security admins and security readers\",\"depth\":0},{\"type\":\"unstyled\",\"depth\":0,\"data\":{},\"inlineStyleRanges\":[],\"key\":\"2hg9v\",\"text\":\"Sign-ins from infected device is classified as low. This risk detection identifies IP addresses, not user devices. If several devices are behind a single IP address, and only some are controlled by a bot network, sign-ins from other devices my trigger this event unnecessarily, which is why this risk detection is classified as\",\"entityRanges\":[]},{\"inlineStyleRanges\":[],\"data\":{},\"entityRanges\":[],\"key\":\"4u5fb\",\"type\":\"unstyled\",\"text\":\"Low.\",\"depth\":0},{\"entityRanges\":[],\"depth\":0,\"type\":\"unstyled\",\"data\":{},\"inlineStyleRanges\":[{\"length\":9,\"style\":\"BOLD\",\"offset\":0}],\"text\":\"Box 3: No\",\"key\":\"shoc\"},{\"key\":\"9benb\",\"data\":{},\"type\":\"unstyled\",\"inlineStyleRanges\":[],\"depth\":0,\"text\":\"User3 will not receive alters.\",\"entityRanges\":[]},{\"data\":{},\"type\":\"unstyled\",\"text\":\"Email alerts are sent to all global admins, security admins and security readers.\",\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"f82l0\"},{\"entityRanges\":[],\"data\":{},\"type\":\"unstyled\",\"inlineStyleRanges\":[],\"key\":\"49c2a\",\"depth\":0,\"text\":\"\"},{\"type\":\"unstyled\",\"text\":\"https://docs.microsoft.com/en-us/azure/active-directory/identity-protection/overview-identity-protection\",\"depth\":0,\"data\":{},\"key\":\"btri2\",\"entityRanges\":[],\"inlineStyleRanges\":[]},{\"type\":\"unstyled\",\"inlineStyleRanges\":[],\"depth\":0,\"text\":\"https://docs.microsoft.com/en-us/azure/active-directory/identity-protection/howto-identity-protection-configure-risk-policies\",\"entityRanges\":[],\"key\":\"6d4nq\",\"data\":{}}]},\"answers\":[{\"value\":\"John Gruber receives 3 email alerts from Azure AD Identity Protection\",\"isCorrectAnswer\":false},{\"value\":\"User2 receives 3 email alerts from Azure AD Identity Protection\",\"isCorrectAnswer\":false},{\"value\":\"User3 receives 2 email alerts from Azure AD Identity Protection\",\"isCorrectAnswer\":false}],\"question\":{\"entityMap\":{\"0\":{\"data\":{\"alt\":\"Users at Risk screenshot\",\"height\":\"auto\",\"src\":\"https://i.ibb.co/RTNLdyM/Users-At-Risk.png\",\"width\":\"auto\",\"alignment\":\"left\"},\"type\":\"IMAGE\",\"mutability\":\"MUTABLE\"},\"1\":{\"mutability\":\"MUTABLE\",\"type\":\"IMAGE\",\"data\":{\"height\":\"auto\",\"alt\":\"User role chart\",\"width\":\"auto\",\"src\":\"https://i.ibb.co/wzLBtGJ/user-role-chart.png\",\"alignment\":\"left\"}}},\"blocks\":[{\"inlineStyleRanges\":[],\"key\":\"957rl\",\"depth\":0,\"type\":\"unstyled\",\"text\":\"You have a Microsoft 365 E5 subscription that contains an Azure Active Directory (Azure AD) tenant named contoso.com.\",\"entityRanges\":[],\"data\":{}},{\"text\":\"Azure AD Identity Protection alerts for contoso.com are configured as shown in the following exhibit.\",\"key\":\"8uunj\",\"entityRanges\":[],\"type\":\"unstyled\",\"data\":{},\"depth\":0,\"inlineStyleRanges\":[]},{\"entityRanges\":[{\"key\":0,\"offset\":0,\"length\":1}],\"key\":\"d1p7o\",\"data\":{},\"inlineStyleRanges\":[],\"type\":\"atomic\",\"depth\":0,\"text\":\" \"},{\"text\":\"A user named John Gruber is configured to receive alerts from Azure AD Identity Protection.\",\"type\":\"unstyled\",\"entityRanges\":[],\"key\":\"deom4\",\"data\":{},\"depth\":0,\"inlineStyleRanges\":[]},{\"text\":\"You create users in contoso.com as shown in the following table.\",\"entityRanges\":[],\"key\":\"c9k4u\",\"inlineStyleRanges\":[],\"depth\":0,\"type\":\"unstyled\",\"data\":{}},{\"depth\":0,\"key\":\"bd174\",\"entityRanges\":[{\"key\":1,\"offset\":0,\"length\":1}],\"type\":\"atomic\",\"data\":{},\"inlineStyleRanges\":[],\"text\":\" \"},{\"depth\":0,\"inlineStyleRanges\":[],\"key\":\"10fuk\",\"entityRanges\":[],\"text\":\"The users perform the sign-ins shown in the following table.For each of the following statements, lc if the statement is true. Otherwise, selehcetc kNboo.\",\"data\":{},\"type\":\"unstyled\"},{\"data\":{},\"entityRanges\":[],\"type\":\"unstyled\",\"inlineStyleRanges\":[],\"key\":\"b6q29\",\"text\":\"For each of the following statements, Click the checkbox if the statement is true. Otherwise, select No.\",\"depth\":0}]}},\r\n      previousQuestionId: '',\r\n      nextQuestionId: '',\r\n      questionId: 'vxLbzynWU',\r\n      questionIdx: '',\r\n      questionHtml: `<p>You have a Microsoft 365 E5 subscription that contains an Azure Active Directory (Azure AD) tenant named contoso.com.</p>\n<p>Azure AD Identity Protection alerts for contoso.com are configured as shown in the following exhibit.</p>\n<div style=\"text-align:left;\"><img src=\"https://i.ibb.co/RTNLdyM/Users-At-Risk.png\" alt=\"Users at Risk screenshot\" style=\"height: auto;width: auto\"/></div>\n<p>A user named John Gruber is configured to receive alerts from Azure AD Identity Protection.</p>\n<p>You create users in contoso.com as shown in the following table.</p>\n<div style=\"text-align:left;\"><img src=\"https://i.ibb.co/wzLBtGJ/user-role-chart.png\" alt=\"User role chart\" style=\"height: auto;width: auto\"/></div>\n<p>The users perform the sign-ins shown in the following table.For each of the following statements, lc if the statement is true. Otherwise, selehcetc kNboo.</p>\n<p>For each of the following statements, Click the checkbox if the statement is true. Otherwise, select No.</p>\n`,\r\n      referencesHtml: `<p><strong>Box 1: No</strong></p>\n<p>User1 will receive the two alerts classified as medium or higher.</p>\n<p>Sign-ins from infected device is classified as low. This risk detection identifies IP addresses, not user devices. If several devices are behind a single IP address, and only some are controlled by a bot network, sign-ins from other devices my trigger this event unnecessarily, which is why this risk detection is classified as</p>\n<p>Low.</p>\n<p><strong>Box 2: No</strong></p>\n<p>User2 will receive the two alerts classified as medium or higher.</p>\n<p>Email alerts are sent to all global admins, security admins and security readers</p>\n<p>Sign-ins from infected device is classified as low. This risk detection identifies IP addresses, not user devices. If several devices are behind a single IP address, and only some are controlled by a bot network, sign-ins from other devices my trigger this event unnecessarily, which is why this risk detection is classified as</p>\n<p>Low.</p>\n<p><strong>Box 3: No</strong></p>\n<p>User3 will not receive alters.</p>\n<p>Email alerts are sent to all global admins, security admins and security readers.</p>\n<p></p>\n<p>https://docs.microsoft.com/en-us/azure/active-directory/identity-protection/overview-identity-protection</p>\n<p>https://docs.microsoft.com/en-us/azure/active-directory/identity-protection/howto-identity-protection-configure-risk-policies</p>\n`,\r\n      selectedAnswer: [],\r\n      answerShown: false,\r\n      questionsShown: false,\r\n      endExamShown: false,\r\n      endExamText: 'Are you sure you want to end the exam?'\r\n    }\r\n  }\r\n\r\n  setUid(user) {\r\n    if (user) {\r\n      this.setState({\r\n        uid: user.uid\r\n      })\r\n\r\n      db.collection(\"users\").doc(this.state.uid).collection('tests').doc(this.state.testId).get().then(doc => {\r\n        const test = doc.data()\r\n        test.id = doc.id\r\n        let previousQuestionId = ''\r\n        let nextQuestionId = ''\r\n        let currentQuestion\r\n        let previousItm\r\n        let foundQuestion = false\r\n        let questionIdx\r\n        let selectedAnswer = this.state.selectedAnswer\r\n\r\n        test.questions.forEach((question, idx) => {\r\n          if (foundQuestion) {\r\n              nextQuestionId = question.id\r\n              foundQuestion = false\r\n          }\r\n\r\n          if (this.state.questionId === question.id) {\r\n            foundQuestion = true\r\n            currentQuestion = question\r\n            questionIdx = idx+1\r\n            if (previousItm)\r\n              previousQuestionId = previousItm.id\r\n\r\n            if (currentQuestion.answered)\r\n              selectedAnswer = currentQuestion.answered\r\n          }\r\n\r\n          previousItm = question\r\n        })\r\n\r\n        db.collection('Tests').doc('MS-500').collection('Questions').doc(currentQuestion.id).get().then(doc => {\r\n          const question = doc.data()\r\n          question.id = doc.id\r\n          const questionHtml = draftToHtml(question.question)\r\n          const referencesHtml = draftToHtml(question.references)\r\n          this.setState({question, questionHtml, referencesHtml})\r\n        })\r\n\r\n        this.setState({\r\n          test,\r\n          questionIdx: questionIdx,\r\n          nextQuestionId: nextQuestionId,\r\n          previousQuestionId: previousQuestionId,\r\n          selectedAnswer\r\n        })\r\n      })\r\n    } else {\r\n      console.log('redirect to login')\r\n    }\r\n  }\r\n\r\n  handleCorrectAnswerChange(event) {\r\n    const idx = event.target.dataset.index\r\n    const target = event.target\r\n    const selectedAnswer = [...this.state.selectedAnswer]\r\n\r\n    if (target.checked) {\r\n      selectedAnswer.push(idx)\r\n    } else {\r\n      const index = selectedAnswer.indexOf(`${idx}`)\r\n      selectedAnswer.splice(index, 1)\r\n    }\r\n\r\n    this.setState({selectedAnswer})\r\n\r\n    const test = Object.assign({}, this.state.test)\r\n\r\n    test.questions = test.questions.map(question => {\r\n      if (question.id === this.state.questionId) {\r\n        question.answered = selectedAnswer\r\n      }\r\n      return question\r\n    })\r\n\r\n    db.collection(\"users\").doc(this.state.uid).collection('tests').doc(test.id).set(test)\r\n\r\n    this.setState({test})\r\n  }\r\n\r\n  toggleShowAnswer() {\r\n    const answerShown = !this.state.answerShown\r\n    this.setState({answerShown})\r\n  }\r\n\r\n  toggleShowQuestions() {\r\n    const questionsShown = !this.state.questionsShown\r\n    this.setState({questionsShown})\r\n  }\r\n\r\n  toggleEndExam() {\r\n    const endExamShown = !this.state.endExamShown\r\n    this.setState({endExamShown})\r\n  }\r\n\r\n  gotoQuestion(questionId) {\r\n    return () => {\r\n      navigate(`/course/ms-500/question/${questionId}?testId=${this.state.testId}`)\r\n    }\r\n  }\r\n\r\n  endExam() {\r\n    const test = this.state.test\r\n    test.isComplete = true\r\n    db.collection(\"users\").doc(this.state.uid).collection('tests').doc(test.id).set(test).then(() => {\r\n      navigate(`/tests/summary?testId=${this.state.testId}`)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let answers = this.state.question.answers ? this.state.question.answers : []\r\n\r\n    answers = [...answers].map((answer, index) => {\r\n      answer.isSelected = this.state.selectedAnswer.includes(`${index}`)\r\n      answer.optionStyles = Object.assign({}, optionStyles)\r\n      if (this.state.answerShown && answer.isCorrectAnswer) {\r\n        answer.optionStyles.background = 'green'\r\n      }\r\n\r\n      return answer\r\n    })\r\n\r\n    return (\r\n      <Page>\r\n        <main>\r\n          <div>\r\n            <Container>\r\n              <Row>\r\n                <Col md={8}><h1>Question {this.state.questionIdx}</h1></Col>\r\n                <Col md={2} className='align-right'> {\r\n                  this.state.previousQuestionId !== '' ?\r\n                    <Button as={Link} to={`/course/ms-500/question/${this.state.previousQuestionId}?testId=${this.state.testId}`}>Previous Question</Button> :\r\n                    ''\r\n                  }\r\n                </Col>\r\n                <Col md={2} className='align-right'>{\r\n                  this.state.nextQuestionId !== '' ?\r\n                    <Button as={Link} to={`/course/ms-500/question/${this.state.nextQuestionId}?testId=${this.state.testId}`}>Next Question</Button> :\r\n                    <Button onClick={this.toggleEndExam} variant=\"warning\">End Exam</Button>\r\n                  }\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                { this.state.questionHtml !== '' ?\r\n                  <div dangerouslySetInnerHTML={{__html: this.state.questionHtml}}></div>\r\n                  : ''\r\n                }\r\n              </Row>\r\n              <Row>\r\n                {answers.map((answerState, index) => {\r\n                  return (\r\n                    <div style={answerState.optionStyles} key={index}>\r\n                      <Form.Check type=\"checkbox\" name={\"AnswerCheck\" + index} id={\"AnswerCheck\" + index} data-index={index} inline style={checkboxStyles} checked={this.state.selectedAnswer.includes(`${index}`)} onChange={this.handleCorrectAnswerChange} />\r\n                      <label htmlFor={\"AnswerCheck\" + index}>{answerState.value}</label>\r\n                    </div>\r\n                  )\r\n                })}\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  { this.state.answerShown ?\r\n                    <div style={referencesStyle} dangerouslySetInnerHTML={{__html: this.state.referencesHtml}}></div> :\r\n                    ''\r\n                  }\r\n                </Col>\r\n              </Row>\r\n              <Row className='align-right'>\r\n                <Col md={8}></Col>\r\n                <Col md={2}> {\r\n                  this.state.previousQuestionId !== '' ?\r\n                    <Button as={Link} to={`/course/ms-500/question/${this.state.previousQuestionId}?testId=${this.state.testId}`}>Previous Question</Button> :\r\n                    ''\r\n                  }\r\n                </Col>\r\n                <Col md={2}>{\r\n                  this.state.nextQuestionId !== '' ?\r\n                    <Button as={Link} to={`/course/ms-500/question/${this.state.nextQuestionId}?testId=${this.state.testId}`}>Next Question</Button> :\r\n                    <Button onClick={this.toggleEndExam} variant=\"warning\">End Exam</Button>\r\n                  }\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={12} md={6}>\r\n                  <Button onClick={this.toggleShowAnswer} style={bottomButtonStyle}>\r\n                    { this.state.answerShown ?\r\n                      <span>Hide Answer</span> :\r\n                      <span>Show Answer</span>\r\n                    }\r\n                  </Button>\r\n                </Col>\r\n                <Col xs={12} md={6} className='align-right'>\r\n                  <Button onClick={this.toggleShowQuestions} style={bottomButtonStyle}>\r\n                    { this.state.questionsShown ?\r\n                      <span>Hide Question List</span> :\r\n                      <span>Show Question List</span>\r\n                    }\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className='align-right'>\r\n                  <Button onClick={this.toggleEndExam} variant=\"warning\" style={bottomButtonStyle}>End Exam</Button>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n\r\n          <Modal show={this.state.questionsShown} onHide={this.toggleShowQuestions}>\r\n            <Modal.Header>\r\n              <Modal.Title>Showing Test Questions</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Table striped bordered hover>\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Answer</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  { this.state.test && this.state.test.questions ? this.state.test.questions.map((question, idx) => (\r\n                    <tr key={idx} onClick={this.gotoQuestion(question.id)} className=\"cursor-pointer\">\r\n                      <td>{idx+1}</td>\r\n                      <td>{question.answered}</td>\r\n                    </tr>\r\n                  )) : '' }\r\n                </tbody>\r\n              </Table>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={this.toggleShowQuestions}>\r\n                Close\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n          <Modal show={this.state.endExamShown} onHide={this.toggleEndExam}>\r\n            <Modal.Header>\r\n              <Modal.Title>Are you sure?</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              { this.state.endExamText }\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={this.endExam}>\r\n                Yes\r\n              </Button>\r\n              <Button variant=\"secondary\" onClick={this.toggleEndExam}>\r\n                No\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </main>\r\n      </Page>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditQuestionPage\r\n"],"sourceRoot":""}