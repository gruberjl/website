{"version":3,"sources":["webpack:///./src/pages/course/ms-500/question/4_zZu6GYm.js"],"names":["db","firebase","firestore","optionStyles","marginTop","marginBottom","display","checkboxStyles","alignItems","justifyContent","referencesStyle","bottomButtonStyle","EditQuestionPage","props","setUid","bind","handleCorrectAnswerChange","toggleShowAnswer","toggleShowQuestions","gotoQuestion","toggleEndExam","endExam","params","URLSearchParams","location","search","auth","onAuthStateChanged","state","questions","uid","testId","get","test","question","previousQuestionId","nextQuestionId","questionId","questionIdx","questionHtml","referencesHtml","selectedAnswer","answerShown","questionsShown","endExamShown","endExamText","user","this","setState","collection","doc","then","data","id","currentQuestion","previousItm","foundQuestion","forEach","idx","answered","draftToHtml","references","console","log","event","target","dataset","index","checked","push","indexOf","splice","Object","assign","map","set","navigate","isComplete","render","answers","answer","isSelected","includes","isCorrectAnswer","background","md","className","as","Link","to","onClick","variant","dangerouslySetInnerHTML","__html","answerState","style","key","Check","type","name","data-index","inline","onChange","htmlFor","value","xs","show","onHide","Header","Title","Body","striped","bordered","hover","Footer","React"],"mappings":"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","file":"component---src-pages-course-ms-500-question-4-z-zu-6-g-ym-js-9001c7af693187e274ff.js","sourcesContent":["import * as React from \"react\"\r\nimport Page from '../../../../components/page'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Table from 'react-bootstrap/Table'\r\nimport { Link, navigate } from \"gatsby\"\r\nimport firebase from \"firebase/app\"\r\nimport \"firebase/firestore\"\r\nimport draftToHtml from 'draftjs-to-html'\r\nconst db = firebase.firestore()\r\n\r\nconst optionStyles = {\r\n  marginTop: '14px',\r\n  marginBottom: '14px',\r\n  display: 'flex'\r\n}\r\n\r\nconst checkboxStyles = {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center'\r\n}\r\n\r\nconst referencesStyle = {\r\n  marginTop: '24px'\r\n}\r\n\r\nconst bottomButtonStyle = {\r\n  marginTop: '24px'\r\n}\r\n\r\nclass EditQuestionPage extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.setUid = this.setUid.bind(this)\r\n    this.handleCorrectAnswerChange = this.handleCorrectAnswerChange.bind(this)\r\n    this.toggleShowAnswer = this.toggleShowAnswer.bind(this)\r\n    this.toggleShowQuestions = this.toggleShowQuestions.bind(this)\r\n    this.gotoQuestion = this.gotoQuestion.bind(this)\r\n    this.toggleEndExam = this.toggleEndExam.bind(this)\r\n    this.endExam = this.endExam.bind(this)\r\n    const params = new URLSearchParams(props.location.search)\r\n\r\n    firebase.auth().onAuthStateChanged(this.setUid)\r\n\r\n    this.state = {\r\n      questions: {},\r\n      uid: '',\r\n      testId: params.get('testId'),\r\n      test: {},\r\n      question: {\"answers\":[{\"value\":\"In the compliance admin center create a Data Loss Prevention Policy that blocks users from sending data covered under the U.K. Data Protection Act\",\"isCorrectAnswer\":true},{\"isCorrectAnswer\":false,\"value\":\"In the Exchange Admin center create a mail flow rule to block inbound emails that contain data covered in the U.K. Data Protection Act\"},{\"value\":\"In the Azure Active Ad admin center create a label that marks emails that contain data covered in the U.K. Data Protection Act\",\"isCorrectAnswer\":false}],\"references\":{\"blocks\":[{\"inlineStyleRanges\":[],\"key\":\"efejo\",\"data\":{},\"text\":\"https://www.iorad.com/player/1801811/MS-500---Prevent-any-email-messages-that-contain-data-covered-by-the-U-K--Data-Protection-Act\",\"entityRanges\":[],\"type\":\"unstyled\",\"depth\":0},{\"data\":{},\"type\":\"ordered-list-item\",\"key\":\"3ekuh\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"text\":\"Open the Microsoft 365 Compliance admin center\"},{\"inlineStyleRanges\":[],\"key\":\"7ncmh\",\"type\":\"ordered-list-item\",\"text\":\"Click Policies\",\"depth\":0,\"data\":{},\"entityRanges\":[]},{\"key\":\"1j1gg\",\"entityRanges\":[],\"inlineStyleRanges\":[],\"data\":{},\"type\":\"ordered-list-item\",\"depth\":0,\"text\":\"Click Data loss prevention\"},{\"data\":{},\"depth\":0,\"key\":\"d95qn\",\"text\":\"Click Policies\",\"entityRanges\":[],\"inlineStyleRanges\":[],\"type\":\"ordered-list-item\"},{\"inlineStyleRanges\":[],\"text\":\"Click Create policy\",\"data\":{},\"key\":\"atg04\",\"depth\":0,\"entityRanges\":[],\"type\":\"ordered-list-item\"},{\"inlineStyleRanges\":[],\"key\":\"hja6\",\"text\":\"Click Privacy\",\"depth\":0,\"entityRanges\":[],\"data\":{},\"type\":\"ordered-list-item\"},{\"text\":\"Click U.K. Data Protection Act\",\"entityRanges\":[],\"type\":\"ordered-list-item\",\"key\":\"9k6n4\",\"data\":{},\"depth\":0,\"inlineStyleRanges\":[]},{\"entityRanges\":[],\"inlineStyleRanges\":[],\"type\":\"ordered-list-item\",\"key\":\"d19vr\",\"text\":\"Click Next\",\"data\":{},\"depth\":0},{\"type\":\"ordered-list-item\",\"key\":\"4ij7e\",\"depth\":0,\"inlineStyleRanges\":[],\"text\":\"Disable all locations except Exchange email.\",\"entityRanges\":[],\"data\":{}},{\"data\":{},\"key\":\"5h2uf\",\"type\":\"ordered-list-item\",\"text\":\"Click Create or customize advanced DLP rules\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[]},{\"data\":{},\"text\":\"Edit the DLP rules to add an exception and block emails from going outbound.\",\"type\":\"ordered-list-item\",\"depth\":0,\"entityRanges\":[],\"inlineStyleRanges\":[],\"key\":\"44v6e\"},{\"depth\":0,\"key\":\"e7v1n\",\"inlineStyleRanges\":[],\"entityRanges\":[],\"type\":\"ordered-list-item\",\"text\":\"Save your new policy.\",\"data\":{}}],\"entityMap\":{}},\"question\":{\"blocks\":[{\"data\":{},\"type\":\"unstyled\",\"entityRanges\":[],\"key\":\"2mndm\",\"depth\":0,\"inlineStyleRanges\":[],\"text\":\"SIMULATION -\"},{\"data\":{},\"type\":\"unstyled\",\"entityRanges\":[],\"key\":\"5fqh1\",\"inlineStyleRanges\":[],\"text\":\"You need to prevent any email messages that contain data covered by the U.K. Data Protection Act from being sent to recipients outside of your organization, unless the messages are sent to an external domain named adatum.com.\",\"depth\":0},{\"data\":{},\"inlineStyleRanges\":[],\"text\":\"To complete this task, sign in to the Microsoft 365 admin center.\",\"depth\":0,\"key\":\"a99n8\",\"type\":\"unstyled\",\"entityRanges\":[]}],\"entityMap\":{}},\"id\":\"4_zZu6GYm\"},\r\n      previousQuestionId: '',\r\n      nextQuestionId: '',\r\n      questionId: '4_zZu6GYm',\r\n      questionIdx: '',\r\n      questionHtml: `<p>SIMULATION -</p>\n<p>You need to prevent any email messages that contain data covered by the U.K. Data Protection Act from being sent to recipients outside of your organization, unless the messages are sent to an external domain named adatum.com.</p>\n<p>To complete this task, sign in to the Microsoft 365 admin center.</p>\n`,\r\n      referencesHtml: `<p>https://www.iorad.com/player/1801811/MS-500---Prevent-any-email-messages-that-contain-data-covered-by-the-U-K--Data-Protection-Act</p>\n<ol>\n<li>Open the Microsoft 365 Compliance admin center</li>\n<li>Click Policies</li>\n<li>Click Data loss prevention</li>\n<li>Click Policies</li>\n<li>Click Create policy</li>\n<li>Click Privacy</li>\n<li>Click U.K. Data Protection Act</li>\n<li>Click Next</li>\n<li>Disable all locations except Exchange email.</li>\n<li>Click Create or customize advanced DLP rules</li>\n<li>Edit the DLP rules to add an exception and block emails from going outbound.</li>\n<li>Save your new policy.</li>\n</ol>\n`,\r\n      selectedAnswer: [],\r\n      answerShown: false,\r\n      questionsShown: false,\r\n      endExamShown: false,\r\n      endExamText: 'Are you sure you want to end the exam?'\r\n    }\r\n  }\r\n\r\n  setUid(user) {\r\n    if (user) {\r\n      this.setState({\r\n        uid: user.uid\r\n      })\r\n\r\n      db.collection(\"users\").doc(this.state.uid).collection('tests').doc(this.state.testId).get().then(doc => {\r\n        const test = doc.data()\r\n        test.id = doc.id\r\n        let previousQuestionId = ''\r\n        let nextQuestionId = ''\r\n        let currentQuestion\r\n        let previousItm\r\n        let foundQuestion = false\r\n        let questionIdx\r\n        let selectedAnswer = this.state.selectedAnswer\r\n\r\n        test.questions.forEach((question, idx) => {\r\n          if (foundQuestion) {\r\n              nextQuestionId = question.id\r\n              foundQuestion = false\r\n          }\r\n\r\n          if (this.state.questionId === question.id) {\r\n            foundQuestion = true\r\n            currentQuestion = question\r\n            questionIdx = idx+1\r\n            if (previousItm)\r\n              previousQuestionId = previousItm.id\r\n\r\n            if (currentQuestion.answered)\r\n              selectedAnswer = currentQuestion.answered\r\n          }\r\n\r\n          previousItm = question\r\n        })\r\n\r\n        db.collection('Tests').doc('MS-500').collection('Questions').doc(currentQuestion.id).get().then(doc => {\r\n          const question = doc.data()\r\n          question.id = doc.id\r\n          const questionHtml = draftToHtml(question.question)\r\n          const referencesHtml = draftToHtml(question.references)\r\n          this.setState({question, questionHtml, referencesHtml})\r\n        })\r\n\r\n        this.setState({\r\n          test,\r\n          questionIdx: questionIdx,\r\n          nextQuestionId: nextQuestionId,\r\n          previousQuestionId: previousQuestionId,\r\n          selectedAnswer\r\n        })\r\n      })\r\n    } else {\r\n      console.log('redirect to login')\r\n    }\r\n  }\r\n\r\n  handleCorrectAnswerChange(event) {\r\n    const idx = event.target.dataset.index\r\n    const target = event.target\r\n    const selectedAnswer = [...this.state.selectedAnswer]\r\n\r\n    if (target.checked) {\r\n      selectedAnswer.push(idx)\r\n    } else {\r\n      const index = selectedAnswer.indexOf(`${idx}`)\r\n      selectedAnswer.splice(index, 1)\r\n    }\r\n\r\n    this.setState({selectedAnswer})\r\n\r\n    const test = Object.assign({}, this.state.test)\r\n\r\n    test.questions = test.questions.map(question => {\r\n      if (question.id === this.state.questionId) {\r\n        question.answered = selectedAnswer\r\n      }\r\n      return question\r\n    })\r\n\r\n    db.collection(\"users\").doc(this.state.uid).collection('tests').doc(test.id).set(test)\r\n\r\n    this.setState({test})\r\n  }\r\n\r\n  toggleShowAnswer() {\r\n    const answerShown = !this.state.answerShown\r\n    this.setState({answerShown})\r\n  }\r\n\r\n  toggleShowQuestions() {\r\n    const questionsShown = !this.state.questionsShown\r\n    this.setState({questionsShown})\r\n  }\r\n\r\n  toggleEndExam() {\r\n    const endExamShown = !this.state.endExamShown\r\n    this.setState({endExamShown})\r\n  }\r\n\r\n  gotoQuestion(questionId) {\r\n    return () => {\r\n      navigate(`/course/ms-500/question/${questionId}?testId=${this.state.testId}`)\r\n    }\r\n  }\r\n\r\n  endExam() {\r\n    const test = this.state.test\r\n    test.isComplete = true\r\n    db.collection(\"users\").doc(this.state.uid).collection('tests').doc(test.id).set(test).then(() => {\r\n      navigate(`/tests/summary?testId=${this.state.testId}`)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let answers = this.state.question.answers ? this.state.question.answers : []\r\n\r\n    answers = [...answers].map((answer, index) => {\r\n      answer.isSelected = this.state.selectedAnswer.includes(`${index}`)\r\n      answer.optionStyles = Object.assign({}, optionStyles)\r\n      if (this.state.answerShown && answer.isCorrectAnswer) {\r\n        answer.optionStyles.background = 'green'\r\n      }\r\n\r\n      return answer\r\n    })\r\n\r\n    return (\r\n      <Page>\r\n        <main>\r\n          <div>\r\n            <Container>\r\n              <Row>\r\n                <Col md={8}><h1>Question {this.state.questionIdx}</h1></Col>\r\n                <Col md={2} className='align-right'> {\r\n                  this.state.previousQuestionId !== '' ?\r\n                    <Button as={Link} to={`/course/ms-500/question/${this.state.previousQuestionId}?testId=${this.state.testId}`}>Previous Question</Button> :\r\n                    ''\r\n                  }\r\n                </Col>\r\n                <Col md={2} className='align-right'>{\r\n                  this.state.nextQuestionId !== '' ?\r\n                    <Button as={Link} to={`/course/ms-500/question/${this.state.nextQuestionId}?testId=${this.state.testId}`}>Next Question</Button> :\r\n                    <Button onClick={this.toggleEndExam} variant=\"warning\">End Exam</Button>\r\n                  }\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                { this.state.questionHtml !== '' ?\r\n                  <div dangerouslySetInnerHTML={{__html: this.state.questionHtml}}></div>\r\n                  : ''\r\n                }\r\n              </Row>\r\n              <Row>\r\n                {answers.map((answerState, index) => {\r\n                  return (\r\n                    <div style={answerState.optionStyles} key={index}>\r\n                      <Form.Check type=\"checkbox\" name={\"AnswerCheck\" + index} id={\"AnswerCheck\" + index} data-index={index} inline style={checkboxStyles} checked={this.state.selectedAnswer.includes(`${index}`)} onChange={this.handleCorrectAnswerChange} />\r\n                      <label htmlFor={\"AnswerCheck\" + index}>{answerState.value}</label>\r\n                    </div>\r\n                  )\r\n                })}\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  { this.state.answerShown ?\r\n                    <div style={referencesStyle} dangerouslySetInnerHTML={{__html: this.state.referencesHtml}}></div> :\r\n                    ''\r\n                  }\r\n                </Col>\r\n              </Row>\r\n              <Row className='align-right'>\r\n                <Col md={8}></Col>\r\n                <Col md={2}> {\r\n                  this.state.previousQuestionId !== '' ?\r\n                    <Button as={Link} to={`/course/ms-500/question/${this.state.previousQuestionId}?testId=${this.state.testId}`}>Previous Question</Button> :\r\n                    ''\r\n                  }\r\n                </Col>\r\n                <Col md={2}>{\r\n                  this.state.nextQuestionId !== '' ?\r\n                    <Button as={Link} to={`/course/ms-500/question/${this.state.nextQuestionId}?testId=${this.state.testId}`}>Next Question</Button> :\r\n                    <Button onClick={this.toggleEndExam} variant=\"warning\">End Exam</Button>\r\n                  }\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={12} md={6}>\r\n                  <Button onClick={this.toggleShowAnswer} style={bottomButtonStyle}>\r\n                    { this.state.answerShown ?\r\n                      <span>Hide Answer</span> :\r\n                      <span>Show Answer</span>\r\n                    }\r\n                  </Button>\r\n                </Col>\r\n                <Col xs={12} md={6} className='align-right'>\r\n                  <Button onClick={this.toggleShowQuestions} style={bottomButtonStyle}>\r\n                    { this.state.questionsShown ?\r\n                      <span>Hide Question List</span> :\r\n                      <span>Show Question List</span>\r\n                    }\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className='align-right'>\r\n                  <Button onClick={this.toggleEndExam} variant=\"warning\" style={bottomButtonStyle}>End Exam</Button>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n\r\n          <Modal show={this.state.questionsShown} onHide={this.toggleShowQuestions}>\r\n            <Modal.Header>\r\n              <Modal.Title>Showing Test Questions</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Table striped bordered hover>\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Answer</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  { this.state.test && this.state.test.questions ? this.state.test.questions.map((question, idx) => (\r\n                    <tr key={idx} onClick={this.gotoQuestion(question.id)} className=\"cursor-pointer\">\r\n                      <td>{idx+1}</td>\r\n                      <td>{question.answered}</td>\r\n                    </tr>\r\n                  )) : '' }\r\n                </tbody>\r\n              </Table>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={this.toggleShowQuestions}>\r\n                Close\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n          <Modal show={this.state.endExamShown} onHide={this.toggleEndExam}>\r\n            <Modal.Header>\r\n              <Modal.Title>Are you sure?</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              { this.state.endExamText }\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={this.endExam}>\r\n                Yes\r\n              </Button>\r\n              <Button variant=\"secondary\" onClick={this.toggleEndExam}>\r\n                No\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </main>\r\n      </Page>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditQuestionPage\r\n"],"sourceRoot":""}