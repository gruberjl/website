{"version":3,"sources":["webpack:///./src/pages/course/ms-500/question/l2v1m_J8Z.js"],"names":["optionStyles","marginTop","marginBottom","display","checkboxStyles","alignItems","justifyContent","referencesStyle","bottomButtonStyle","EditQuestionPage","props","setUid","bind","handleCorrectAnswerChange","toggleShowAnswer","toggleShowQuestions","gotoQuestion","toggleEndExam","endExam","params","URLSearchParams","location","search","window","firebase","auth","onAuthStateChanged","state","questions","uid","testId","get","test","question","previousQuestionId","nextQuestionId","questionId","questionIdx","questionHtml","referencesHtml","selectedAnswer","answerShown","questionsShown","endExamShown","endExamText","user","db","firestore","this","setState","collection","doc","then","data","id","currentQuestion","previousItm","foundQuestion","forEach","idx","answered","draftToHtml","references","navigate","event","target","dataset","index","checked","push","indexOf","splice","Object","assign","map","set","isComplete","render","answers","answer","isSelected","includes","isCorrectAnswer","background","md","className","as","Link","to","onClick","variant","dangerouslySetInnerHTML","__html","answerState","style","key","Check","type","name","data-index","inline","onChange","htmlFor","value","xs","show","onHide","Header","Title","Body","striped","bordered","hover","Footer","React"],"mappings":"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","file":"component---src-pages-course-ms-500-question-l-2-v-1-m-j-8-z-js-e6713b324c8b5f0420ea.js","sourcesContent":["import * as React from \"react\"\r\nimport Page from '../../../../components/page'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Table from 'react-bootstrap/Table'\r\nimport { Link, navigate } from \"gatsby\"\r\nimport firebase from 'gatsby-plugin-firebase-app'\r\nimport draftToHtml from 'draftjs-to-html'\r\n\r\n\r\nconst optionStyles = {\r\n  marginTop: '14px',\r\n  marginBottom: '14px',\r\n  display: 'flex'\r\n}\r\n\r\nconst checkboxStyles = {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center'\r\n}\r\n\r\nconst referencesStyle = {\r\n  marginTop: '24px'\r\n}\r\n\r\nconst bottomButtonStyle = {\r\n  marginTop: '24px'\r\n}\r\n\r\nclass EditQuestionPage extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.setUid = this.setUid.bind(this)\r\n    this.handleCorrectAnswerChange = this.handleCorrectAnswerChange.bind(this)\r\n    this.toggleShowAnswer = this.toggleShowAnswer.bind(this)\r\n    this.toggleShowQuestions = this.toggleShowQuestions.bind(this)\r\n    this.gotoQuestion = this.gotoQuestion.bind(this)\r\n    this.toggleEndExam = this.toggleEndExam.bind(this)\r\n    this.endExam = this.endExam.bind(this)\r\n    const params = new URLSearchParams(props.location.search)\r\n\r\n    const isBrowser = () => typeof window !== 'undefined'\r\n\r\n    if (isBrowser()) {\r\n      firebase.auth().onAuthStateChanged(this.setUid)\r\n    }\r\n\r\n    this.state = {\r\n      questions: {},\r\n      uid: '',\r\n      testId: params.get('testId'),\r\n      test: {},\r\n      question: {\"id\":\"l2v1m_J8Z\",\"answers\":[{\"value\":\"External users can access File1\",\"isCorrectAnswer\":true},{\"value\":\"The users in contoso.com can access File2\",\"isCorrectAnswer\":false},{\"value\":\"External users can access File3\",\"isCorrectAnswer\":false}],\"references\":{\"entityMap\":{},\"blocks\":[{\"key\":\"5t3am\",\"depth\":0,\"data\":{},\"text\":\"\",\"entityRanges\":[],\"type\":\"unstyled\",\"inlineStyleRanges\":[]}]},\"question\":{\"blocks\":[{\"text\":\"You have a Microsoft 365 subscription that uses an Azure Active Directory (Azure AD) tenant named contoso.com.\",\"data\":{},\"depth\":0,\"type\":\"unstyled\",\"key\":\"50gpj\",\"entityRanges\":[],\"inlineStyleRanges\":[]},{\"data\":{},\"entityRanges\":[],\"key\":\"260nn\",\"depth\":0,\"inlineStyleRanges\":[],\"type\":\"unstyled\",\"text\":\"OneDrive stores files that are shared with external users. The files are configured as shown in the following table.\"},{\"data\":{},\"entityRanges\":[{\"offset\":0,\"key\":0,\"length\":1}],\"key\":\"euhdj\",\"depth\":0,\"inlineStyleRanges\":[],\"text\":\" \",\"type\":\"atomic\"},{\"text\":\"You create a data loss prevention (DLP) policy that applies to the content stored in OneDrive accounts. The policy contains the following three rules:\",\"type\":\"unstyled\",\"key\":\"a6paf\",\"inlineStyleRanges\":[],\"data\":{},\"entityRanges\":[],\"depth\":0},{\"inlineStyleRanges\":[{\"offset\":0,\"length\":5,\"style\":\"BOLD\"}],\"depth\":0,\"text\":\"Rule1:\",\"data\":{},\"entityRanges\":[],\"key\":\"6vh9m\",\"type\":\"unstyled\"},{\"depth\":0,\"inlineStyleRanges\":[],\"key\":\"1ui6b\",\"data\":{},\"entityRanges\":[],\"text\":\"Conditions: Label1, Detect content that's shared with people outside my organization\",\"type\":\"unordered-list-item\"},{\"inlineStyleRanges\":[],\"type\":\"unordered-list-item\",\"text\":\"Actions: Restrict access to the content for external users\",\"data\":{},\"depth\":0,\"key\":\"5q0vt\",\"entityRanges\":[]},{\"data\":{},\"depth\":0,\"key\":\"ervr\",\"entityRanges\":[],\"type\":\"unordered-list-item\",\"inlineStyleRanges\":[],\"text\":\"User notifications: Notify the user who last modified the content\"},{\"entityRanges\":[],\"depth\":0,\"inlineStyleRanges\":[],\"text\":\"User overrides: On\",\"key\":\"cv2dv\",\"data\":{},\"type\":\"unordered-list-item\"},{\"data\":{},\"entityRanges\":[],\"depth\":0,\"key\":\"av8gm\",\"type\":\"unordered-list-item\",\"inlineStyleRanges\":[],\"text\":\"Priority: 0\"},{\"depth\":0,\"data\":{},\"type\":\"unstyled\",\"text\":\"Rule2:\",\"key\":\"og34\",\"entityRanges\":[],\"inlineStyleRanges\":[{\"style\":\"BOLD\",\"offset\":0,\"length\":5}]},{\"type\":\"unordered-list-item\",\"data\":{},\"entityRanges\":[],\"depth\":0,\"text\":\"Conditions: Label1 or Label2\",\"key\":\"cjeds\",\"inlineStyleRanges\":[]},{\"type\":\"unordered-list-item\",\"text\":\"Actions: Restrict access to the content\",\"key\":\"854sf\",\"data\":{},\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[]},{\"depth\":0,\"key\":\"3s1li\",\"text\":\"Priority: 1\",\"type\":\"unordered-list-item\",\"entityRanges\":[],\"data\":{},\"inlineStyleRanges\":[]},{\"data\":{},\"key\":\"5ujn5\",\"text\":\"Rule3:\",\"type\":\"unstyled\",\"inlineStyleRanges\":[{\"style\":\"BOLD\",\"length\":5,\"offset\":0}],\"entityRanges\":[],\"depth\":0},{\"entityRanges\":[],\"data\":{},\"type\":\"unordered-list-item\",\"text\":\"Conditions: Label2, Detect content that's shared with people outside my organization\",\"depth\":0,\"inlineStyleRanges\":[],\"key\":\"f2jcf\"},{\"data\":{},\"inlineStyleRanges\":[],\"depth\":0,\"type\":\"unordered-list-item\",\"entityRanges\":[],\"key\":\"4rk5n\",\"text\":\"Actions: Restrict access to the content for external users\"},{\"text\":\"User notifications: Notify the user who last modified the content\",\"entityRanges\":[],\"key\":\"6lr8c\",\"data\":{},\"depth\":0,\"type\":\"unordered-list-item\",\"inlineStyleRanges\":[]},{\"inlineStyleRanges\":[],\"data\":{},\"key\":\"7iado\",\"entityRanges\":[],\"text\":\"User overrides: On\",\"type\":\"unordered-list-item\",\"depth\":0},{\"text\":\"Priority: 2\",\"depth\":0,\"key\":\"1mk1m\",\"data\":{},\"inlineStyleRanges\":[],\"entityRanges\":[],\"type\":\"unordered-list-item\"},{\"data\":{},\"inlineStyleRanges\":[],\"entityRanges\":[],\"depth\":0,\"key\":\"4p8lg\",\"type\":\"unstyled\",\"text\":\"For each of the following statements, check the box if the statement is true.\"}],\"entityMap\":{\"0\":{\"data\":{\"alt\":\"Files and labels chart\",\"width\":\"auto\",\"src\":\"https://i.ibb.co/rMYDH1g/file-labels.png\",\"height\":\"auto\",\"alignment\":\"left\"},\"type\":\"IMAGE\",\"mutability\":\"MUTABLE\"}}}},\r\n      previousQuestionId: '',\r\n      nextQuestionId: '',\r\n      questionId: 'l2v1m_J8Z',\r\n      questionIdx: '',\r\n      questionHtml: `<p>You have a Microsoft 365 subscription that uses an Azure Active Directory (Azure AD) tenant named contoso.com.</p>\n<p>OneDrive stores files that are shared with external users. The files are configured as shown in the following table.</p>\n<div style=\"text-align:left;\"><img src=\"https://i.ibb.co/rMYDH1g/file-labels.png\" alt=\"Files and labels chart\" style=\"height: auto;width: auto\"/></div>\n<p>You create a data loss prevention (DLP) policy that applies to the content stored in OneDrive accounts. The policy contains the following three rules:</p>\n<p><strong>Rule1</strong>:</p>\n<ul>\n<li>Conditions: Label1, Detect content that's shared with people outside my organization</li>\n<li>Actions: Restrict access to the content for external users</li>\n<li>User notifications: Notify the user who last modified the content</li>\n<li>User overrides: On</li>\n<li>Priority: 0</li>\n</ul>\n<p><strong>Rule2</strong>:</p>\n<ul>\n<li>Conditions: Label1 or Label2</li>\n<li>Actions: Restrict access to the content</li>\n<li>Priority: 1</li>\n</ul>\n<p><strong>Rule3</strong>:</p>\n<ul>\n<li>Conditions: Label2, Detect content that's shared with people outside my organization</li>\n<li>Actions: Restrict access to the content for external users</li>\n<li>User notifications: Notify the user who last modified the content</li>\n<li>User overrides: On</li>\n<li>Priority: 2</li>\n</ul>\n<p>For each of the following statements, check the box if the statement is true.</p>\n`,\r\n      referencesHtml: `<p></p>\n`,\r\n      selectedAnswer: [],\r\n      answerShown: false,\r\n      questionsShown: false,\r\n      endExamShown: false,\r\n      endExamText: 'Are you sure you want to end the exam?'\r\n    }\r\n  }\r\n\r\n  setUid(user) {\r\n    const db = firebase.firestore()\r\n    if (user) {\r\n      this.setState({\r\n        uid: user.uid\r\n      })\r\n\r\n      db.collection(\"users\").doc(this.state.uid).collection('tests').doc(this.state.testId).get().then(doc => {\r\n        const test = doc.data()\r\n        test.id = doc.id\r\n        let previousQuestionId = ''\r\n        let nextQuestionId = ''\r\n        let currentQuestion\r\n        let previousItm\r\n        let foundQuestion = false\r\n        let questionIdx\r\n        let selectedAnswer = this.state.selectedAnswer\r\n\r\n        test.questions.forEach((question, idx) => {\r\n          if (foundQuestion) {\r\n              nextQuestionId = question.id\r\n              foundQuestion = false\r\n          }\r\n\r\n          if (this.state.questionId === question.id) {\r\n            foundQuestion = true\r\n            currentQuestion = question\r\n            questionIdx = idx+1\r\n            if (previousItm)\r\n              previousQuestionId = previousItm.id\r\n\r\n            if (currentQuestion.answered)\r\n              selectedAnswer = currentQuestion.answered\r\n          }\r\n\r\n          previousItm = question\r\n        })\r\n\r\n        db.collection('Tests').doc('MS-500').collection('Questions').doc(currentQuestion.id).get().then(doc => {\r\n          const question = doc.data()\r\n          question.id = doc.id\r\n          const questionHtml = draftToHtml(question.question)\r\n          const referencesHtml = draftToHtml(question.references)\r\n          this.setState({question, questionHtml, referencesHtml})\r\n        })\r\n\r\n        this.setState({\r\n          test,\r\n          questionIdx: questionIdx,\r\n          nextQuestionId: nextQuestionId,\r\n          previousQuestionId: previousQuestionId,\r\n          selectedAnswer\r\n        })\r\n      })\r\n    } else {\r\n      navigate(\"/login\")\r\n    }\r\n  }\r\n\r\n  handleCorrectAnswerChange(event) {\r\n    const idx = event.target.dataset.index\r\n    const target = event.target\r\n    const selectedAnswer = [...this.state.selectedAnswer]\r\n\r\n    if (target.checked) {\r\n      selectedAnswer.push(idx)\r\n    } else {\r\n      const index = selectedAnswer.indexOf(`${idx}`)\r\n      selectedAnswer.splice(index, 1)\r\n    }\r\n\r\n    this.setState({selectedAnswer})\r\n\r\n    const test = Object.assign({}, this.state.test)\r\n\r\n    test.questions = test.questions.map(question => {\r\n      if (question.id === this.state.questionId) {\r\n        question.answered = selectedAnswer\r\n      }\r\n      return question\r\n    })\r\n\r\n    const db = firebase.firestore()\r\n    db.collection(\"users\").doc(this.state.uid).collection('tests').doc(test.id).set(test)\r\n\r\n    this.setState({test})\r\n  }\r\n\r\n  toggleShowAnswer() {\r\n    const answerShown = !this.state.answerShown\r\n    this.setState({answerShown})\r\n  }\r\n\r\n  toggleShowQuestions() {\r\n    const questionsShown = !this.state.questionsShown\r\n    this.setState({questionsShown})\r\n  }\r\n\r\n  toggleEndExam() {\r\n    const endExamShown = !this.state.endExamShown\r\n    this.setState({endExamShown})\r\n  }\r\n\r\n  gotoQuestion(questionId) {\r\n    return () => {\r\n      navigate(`/course/ms-500/question/${questionId}?testId=${this.state.testId}`)\r\n    }\r\n  }\r\n\r\n  endExam() {\r\n    const test = this.state.test\r\n    test.isComplete = true\r\n    const db = firebase.firestore()\r\n    db.collection(\"users\").doc(this.state.uid).collection('tests').doc(test.id).set(test).then(() => {\r\n      navigate(`/tests/summary?testId=${this.state.testId}`)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let answers = this.state.question.answers ? this.state.question.answers : []\r\n\r\n    answers = [...answers].map((answer, index) => {\r\n      answer.isSelected = this.state.selectedAnswer.includes(`${index}`)\r\n      answer.optionStyles = Object.assign({}, optionStyles)\r\n      if (this.state.answerShown && answer.isCorrectAnswer) {\r\n        answer.optionStyles.background = 'green'\r\n      }\r\n\r\n      return answer\r\n    })\r\n\r\n    return (\r\n      <Page>\r\n        <main>\r\n          <div>\r\n            <Container>\r\n              <Row>\r\n                <Col md={8}><h1>Question {this.state.questionIdx}</h1></Col>\r\n                <Col md={2} className='align-right'> {\r\n                  this.state.previousQuestionId !== '' ?\r\n                    <Button as={Link} to={`/course/ms-500/question/${this.state.previousQuestionId}?testId=${this.state.testId}`}>Previous Question</Button> :\r\n                    ''\r\n                  }\r\n                </Col>\r\n                <Col md={2} className='align-right'>{\r\n                  this.state.nextQuestionId !== '' ?\r\n                    <Button as={Link} to={`/course/ms-500/question/${this.state.nextQuestionId}?testId=${this.state.testId}`}>Next Question</Button> :\r\n                    <Button onClick={this.toggleEndExam} variant=\"warning\">End Exam</Button>\r\n                  }\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                { this.state.questionHtml !== '' ?\r\n                  <div dangerouslySetInnerHTML={{__html: this.state.questionHtml}}></div>\r\n                  : ''\r\n                }\r\n              </Row>\r\n              <Row>\r\n                {answers.map((answerState, index) => {\r\n                  return (\r\n                    <div style={answerState.optionStyles} key={index}>\r\n                      <Form.Check type=\"checkbox\" name={\"AnswerCheck\" + index} id={\"AnswerCheck\" + index} data-index={index} inline style={checkboxStyles} checked={this.state.selectedAnswer.includes(`${index}`)} onChange={this.handleCorrectAnswerChange} />\r\n                      <label htmlFor={\"AnswerCheck\" + index}>{answerState.value}</label>\r\n                    </div>\r\n                  )\r\n                })}\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  { this.state.answerShown ?\r\n                    <div style={referencesStyle} dangerouslySetInnerHTML={{__html: this.state.referencesHtml}}></div> :\r\n                    ''\r\n                  }\r\n                </Col>\r\n              </Row>\r\n              <Row className='align-right'>\r\n                <Col md={8}></Col>\r\n                <Col md={2}> {\r\n                  this.state.previousQuestionId !== '' ?\r\n                    <Button as={Link} to={`/course/ms-500/question/${this.state.previousQuestionId}?testId=${this.state.testId}`}>Previous Question</Button> :\r\n                    ''\r\n                  }\r\n                </Col>\r\n                <Col md={2}>{\r\n                  this.state.nextQuestionId !== '' ?\r\n                    <Button as={Link} to={`/course/ms-500/question/${this.state.nextQuestionId}?testId=${this.state.testId}`}>Next Question</Button> :\r\n                    <Button onClick={this.toggleEndExam} variant=\"warning\">End Exam</Button>\r\n                  }\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={12} md={6}>\r\n                  <Button onClick={this.toggleShowAnswer} style={bottomButtonStyle}>\r\n                    { this.state.answerShown ?\r\n                      <span>Hide Answer</span> :\r\n                      <span>Show Answer</span>\r\n                    }\r\n                  </Button>\r\n                </Col>\r\n                <Col xs={12} md={6} className='align-right'>\r\n                  <Button onClick={this.toggleShowQuestions} style={bottomButtonStyle}>\r\n                    { this.state.questionsShown ?\r\n                      <span>Hide Question List</span> :\r\n                      <span>Show Question List</span>\r\n                    }\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col className='align-right'>\r\n                  <Button onClick={this.toggleEndExam} variant=\"warning\" style={bottomButtonStyle}>End Exam</Button>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n\r\n          <Modal show={this.state.questionsShown} onHide={this.toggleShowQuestions}>\r\n            <Modal.Header>\r\n              <Modal.Title>Showing Test Questions</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Table striped bordered hover>\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Answer</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  { this.state.test && this.state.test.questions ? this.state.test.questions.map((question, idx) => (\r\n                    <tr key={idx} onClick={this.gotoQuestion(question.id)} className=\"cursor-pointer\">\r\n                      <td>{idx+1}</td>\r\n                      <td>{question.answered}</td>\r\n                    </tr>\r\n                  )) : '' }\r\n                </tbody>\r\n              </Table>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={this.toggleShowQuestions}>\r\n                Close\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n          <Modal show={this.state.endExamShown} onHide={this.toggleEndExam}>\r\n            <Modal.Header>\r\n              <Modal.Title>Are you sure?</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              { this.state.endExamText }\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={this.endExam}>\r\n                Yes\r\n              </Button>\r\n              <Button variant=\"secondary\" onClick={this.toggleEndExam}>\r\n                No\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </main>\r\n      </Page>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditQuestionPage\r\n"],"sourceRoot":""}